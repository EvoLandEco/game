language: cpp
dist: bionic

#
# Build Dependencies
#
before_script:

  #
  # Build Folder
  #
  - mkdir build
  - cd build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi

compiler:
  - gcc
  - clang 
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-bionic main
    packages:
      - clang-6.0
      - clang-tidy-6.0
      - gcc-6
      - g++-6
install: 
  # Required on bionic
  - sudo apt update -qq
  # Boost
  - sudo apt install -qq libboost-all-dev
  # Qt5
  - sudo apt install -qq qt5-qmake qt5-default
  # SFML
  - sudo apt install -qq libsfml-dev
  # cppcheck
  - sudo apt install -qq cppcheck
  # Codecov
  - sudo pip install codecov
  # OCLint
  - ./scripts/install_oclint
  # SLOCcount
  - sudo apt install -qq sloccount

services:
  - xvfb
  - alsa

script: 
    #use cmake to enforce coding standards with clang-tidy
  - cmake -DCMAKE_CXX_COMPILER="g++-6" \
    -DCMAKE_CXX_CLANG_TIDY="clang-tidy;-warnings-as-errors=*;-header-filter=$(realpath ..);-checks=-*,-cppcoreguidelines-*;\
    -format-style='{IndentWidth: 8}'" ..
  - make
  - make tidy > output.txt
  - |
    if [[ -n $(grep "warning: " output.txt) ]] || [[ -n $(grep "error: " output.txt) ]]; then
        echo "You must pass the clang tidy checks before submitting a pull request"
        echo ""
        grep --color -E '^|warning: |error: ' output.txt
        exit -1;
    else
        echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
    fi
  # Build the project, then:
  - cd ../
  - qmake -qt=qt5 DEFINES+=IS_ON_TRAVIS game.pro
  - make --silent debug
  - ./game --test
  # 2) Run the game for a short time, then quit
  # Call OCLint
  - ./scripts/do_oclint
  # Get code coverage
  - cp debug/*.* .
  #- ./scripts/get_code_cov >/dev/null
  - ./scripts/get_code_cov
  #- codecov >/dev/null
  - codecov
  # cppcheck
  - travis_wait 50 cppcheck --quiet --error-exitcode=1 .
  # SLOCcount
  #   remove build dir for CMake, OCLint and .git, otherwise it will be counted as well
  - rm -rf build
  - rm -rf oclint-0.10.3 oclint-0.10.3-x86_64-linux-3.13.0-74-generic.tar.gz oclint.log
  - rm -rf .git
  - rm -rf debug
  - rm -rf release
  - cd ..; sloccount --overhead 1 --personcost 22614 game | egrep -v "Adding"; cd game

after_success:
  # Codecov
  - bash <(curl -s https://codecov.io/bash)
